package misproyectos.actividad6;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.lang.NumberFormatException;

public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnLeer = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        txtTexto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel2.setText("Numero:");

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnLeer.setText("Leer");
        btnLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        txtTexto.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCrear)
                        .addGap(18, 18, 18)
                        .addComponent(btnLeer)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrar)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizar)
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre)
                            .addComponent(txtNumero, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                        .addGap(44, 44, 44))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnLeer)
                    .addComponent(btnBorrar)
                    .addComponent(btnActualizar))
                .addGap(18, 18, 18)
                .addComponent(txtTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
try {

			String newName = String.valueOf(txtNombre.getText());

			long newNumber = Long.parseLong(txtNumero.getText());

			String nameNumberString;
			String name;
			long number;
			int index;

			File file = new File("C:\\Users\\Tomas\\OneDrive\\Documentos\\Actividades POO\\Actividad6\\ArchivosTexto\\Amigos.txt");

			if (!file.exists()) {

				file.createNewFile();
			}


			RandomAccessFile raf
				= new RandomAccessFile(file, "rw");
			boolean found = false;

			while (raf.getFilePointer() < raf.length()) {

				nameNumberString = raf.readLine();


				String[] lineSplit
					= nameNumberString.split("!");

				name = lineSplit[0];
				number = Long.parseLong(lineSplit[1]);

				if (name == newName
					|| number == newNumber) {
					found = true;
					break;
				}
			}

			if (found == false) {


				nameNumberString
					= newName + "!"
					+ String.valueOf(newNumber);


				raf.writeBytes(nameNumberString);


				raf.writeBytes(System.lineSeparator());


				txtTexto.setText("Amigo aÃ±adido");


				raf.close();
			}

			else {

	
				raf.close();


				txtTexto.setText("El amigo ya existe");
			}
		}

		catch (IOException ioe) {

			System.out.println(ioe);
		}
		catch (NumberFormatException nef) {

			System.out.println(nef);
		}
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeerActionPerformed


		try {
    String nameNumberString;
    String name;
    long number;
    int index;

        File file = new File("C:\\Users\\Tomas\\OneDrive\\Documentos\\Actividades POO\\Actividad6\\ArchivosTexto\\Amigos.txt");

    if (!file.exists()) {
        file.createNewFile();
    }


    RandomAccessFile raf = new RandomAccessFile(file, "rw");
    boolean found = false;


    while (raf.getFilePointer() < raf.length()) {

        nameNumberString = raf.readLine();


        String[] lineSplit = nameNumberString.split("!");

 
        name = lineSplit[0];
        number = Long.parseLong(lineSplit[1]);


        txtTexto.setText("Friend Name: " + name + "\n"+ "Contact Number: " + number + "\n");
    }
} catch (IOException ioe) {
    System.out.println(ioe);
} catch (NumberFormatException nef) {
    System.out.println(nef);
}

    }//GEN-LAST:event_btnLeerActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
try {
 

            String newName = String.valueOf(txtNombre.getText());
 
 
            long newNumber = Long.parseLong(txtNumero.getText());
 
            String nameNumberString;
            String name;
            long number;
            int index;
 
            File file = new File("C:\\Users\\Tomas\\OneDrive\\Documentos\\Actividades POO\\Actividad6\\ArchivosTexto\\Amigos.txt");
 
            if (!file.exists()) {
 

                file.createNewFile();
            }
 
 
            RandomAccessFile raf
                = new RandomAccessFile(file, "rw");
            boolean found = false;
 

            while (raf.getFilePointer() < raf.length()) {
 

                nameNumberString = raf.readLine();

                String[] lineSplit
                    = nameNumberString.split("!");
 

                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
 

                if (name.equals(newName)
                    || number == (newNumber)) {
                    found = true;
                    break;
                }
            }
 

            if (found == true) {
 

                File tmpFile = new File("C:\\Users\\Tomas\\OneDrive\\Documentos\\Actividades POO\\Actividad6\\ArchivosTexto\\temp.txt");
 

                RandomAccessFile tmpraf
                    = new RandomAccessFile(tmpFile, "rw");
 

                raf.seek(0);
 

                while (raf.getFilePointer()
                       < raf.length()) {
 

                    nameNumberString = raf.readLine();
 
                    index = nameNumberString.indexOf('!');
                    name = nameNumberString.substring(
                        0, index);
 

                    if (name.equals(newName)) {
 

                        nameNumberString
                            = name + "!"
                              + String.valueOf(newNumber);
                    }
 

                    tmpraf.writeBytes(nameNumberString);

                    tmpraf.writeBytes(
                        System.lineSeparator());
                }
 

                raf.seek(0);
                tmpraf.seek(0);
 

                while (tmpraf.getFilePointer()
                       < tmpraf.length()) {
                    raf.writeBytes(tmpraf.readLine());
                    raf.writeBytes(System.lineSeparator());
                }
 

                raf.setLength(tmpraf.length());
 

                tmpraf.close();
                raf.close();
 
 
                tmpFile.delete();
 
                txtTexto.setText("Amigo actualizado");
            }
 

            else {
 

                raf.close();
 

                txtTexto.setText(newName + " no existe");
            }
        }
 
        catch (IOException ioe) {
            System.out.println(ioe);
        }
 
        catch (NumberFormatException nef) {
            System.out.println(nef);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
try {
 
            String newName = String.valueOf(txtNombre.getText());
 
            String nameNumberString;
            String name;
            long number;
            int index;
 

            File file = new File("C:\\Users\\Tomas\\OneDrive\\Documentos\\Actividades POO\\Actividad6\\ArchivosTexto\\Amigos.txt");
 
            if (!file.exists()) {
 

                file.createNewFile();
            }
 

            RandomAccessFile raf
                = new RandomAccessFile(file, "rw");
            boolean found = false;
 

            while (raf.getFilePointer() < raf.length()) {
 

                nameNumberString = raf.readLine();
 

                String[] lineSplit
                    = nameNumberString.split("!");
 

                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
 

                if (name.equals(newName)){
                    found = true;
                    break;
                }
            }
 

            if (found == true) {
 

                File tmpFile = new File("C:\\Users\\Tomas\\OneDrive\\Documentos\\Actividades POO\\Actividad6\\ArchivosTexto\\temp.txt");
 

                RandomAccessFile tmpraf
                    = new RandomAccessFile(tmpFile, "rw");
 

                raf.seek(0);
 

                while (raf.getFilePointer()
                       < raf.length()) {
 

                    nameNumberString = raf.readLine();
 
                    index = nameNumberString.indexOf('!');
                    name = nameNumberString.substring(
                        0, index);
 

                    if (name.equals(newName)) {
 

                        continue;
                    }
 

                    tmpraf.writeBytes(nameNumberString);
 

                    tmpraf.writeBytes(
                        System.lineSeparator());
                }
 

                raf.seek(0);
                tmpraf.seek(0);
 

                while (tmpraf.getFilePointer()
                       < tmpraf.length()) {
                    raf.writeBytes(tmpraf.readLine());
                    raf.writeBytes(System.lineSeparator());
                }
 

                raf.setLength(tmpraf.length());
 

                tmpraf.close();
                raf.close();
 

                tmpFile.delete();
 
                txtTexto.setText(" Amigo deleted. ");
            }
 

            else {
 

                raf.close();
 

                txtTexto.setText(newName + " no existe");
            }
        }
 
        catch (IOException ioe) {
            System.out.println(ioe);
        }        
    }//GEN-LAST:event_btnBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnLeer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtTexto;
    // End of variables declaration//GEN-END:variables
}
